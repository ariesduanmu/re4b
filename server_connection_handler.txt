┌ 433: sym.connection_handler (int32_t arg_8h);
│           ; var char *buffer @ ebp-0x7e4
│           ; var char *dest @ ebp-0x14
│           ; var size_t length @ ebp-0x10
│           ; var int32_t fildes @ ebp-0xc
│           ; var int32_t var_4h @ ebp-0x4
│           ; arg int32_t arg_8h @ ebp+0x8
│           0x000014ac      55             push ebp
│           0x000014ad      89e5           mov ebp, esp
│           0x000014af      53             push ebx
│           0x000014b0      81ece4070000   sub esp, 0x7e4
│           0x000014b6      e805fdffff     call sym.__x86.get_pc_thunk.bx
│           0x000014bb      81c3452b0000   add ebx, 0x2b45
│           0x000014c1      8b4508         mov eax, dword [arg_8h]
│           0x000014c4      8b00           mov eax, dword [eax]
│           0x000014c6      8945f4         mov dword [fildes], eax
│           0x000014c9      6a00           push 0                      ; int flags
│           0x000014cb      68cf000000     push 0xcf                   ; size_t length
│           0x000014d0      8d83b0e0ffff   lea eax, dword [ebx - 0x1f50]
│           0x000014d6      50             push eax                    ; void *buffer
│           0x000014d7      ff75f4         push dword [fildes]         ; int socket
│           0x000014da      e881fcffff     call sym.imp.send           ; ssize_t send(int socket, void *buffer, size_t length, int flags)
│           0x000014df      83c410         add esp, 0x10
│       ┌─< 0x000014e2      e909010000     jmp 0x15f0
│       │   ; CODE XREF from sym.connection_handler @ 0x1610
│      ┌──> 0x000014e7      6a00           push 0                      ; int flags
│      ╎│   0x000014e9      6a0f           push 0xf                    ; size_t length
│      ╎│   0x000014eb      8d8380e1ffff   lea eax, dword [ebx - 0x1e80]
│      ╎│   0x000014f1      50             push eax                    ; void *buffer
│      ╎│   0x000014f2      ff75f4         push dword [fildes]         ; int socket
│      ╎│   0x000014f5      e866fcffff     call sym.imp.send           ; ssize_t send(int socket, void *buffer, size_t length, int flags)
│      ╎│   0x000014fa      83c410         add esp, 0x10
│      ╎│   0x000014fd      8b45f0         mov eax, dword [length]
│      ╎│   0x00001500      6a00           push 0                      ; int flags
│      ╎│   0x00001502      50             push eax                    ; size_t length
│      ╎│   0x00001503      8d851cf8ffff   lea eax, dword [buffer]
│      ╎│   0x00001509      50             push eax                    ; void *buffer
│      ╎│   0x0000150a      ff75f4         push dword [fildes]         ; int socket
│      ╎│   0x0000150d      e84efcffff     call sym.imp.send           ; ssize_t send(int socket, void *buffer, size_t length, int flags)
│      ╎│   0x00001512      83c410         add esp, 0x10
│      ╎│   0x00001515      83ec0c         sub esp, 0xc
│      ╎│   0x00001518      8d851cf8ffff   lea eax, dword [buffer]
│      ╎│   0x0000151e      50             push eax                    ; const char *s
│      ╎│   0x0000151f      e88cfbffff     call sym.imp.strlen         ; size_t strlen(const char *s)
│      ╎│   0x00001524      83c410         add esp, 0x10
│      ╎│   0x00001527      89c2           mov edx, eax
│      ╎│   0x00001529      8d851cf8ffff   lea eax, dword [buffer]
│      ╎│   0x0000152f      50             push eax
│      ╎│   0x00001530      52             push edx
│      ╎│   0x00001531      ff75f4         push dword [fildes]
│      ╎│   0x00001534      8d8390e1ffff   lea eax, dword [ebx - 0x1e70]
│      ╎│   0x0000153a      50             push eax                    ; const char *format
│      ╎│   0x0000153b      e8f0faffff     call sym.imp.printf         ; int printf(const char *format)
│      ╎│   0x00001540      83c410         add esp, 0x10
│      ╎│   0x00001543      83ec04         sub esp, 4
│      ╎│   0x00001546      6a08           push 8                      ; size_t n
│      ╎│   0x00001548      8d83b8e1ffff   lea eax, dword [ebx - 0x1e48]
│      ╎│   0x0000154e      50             push eax                    ; const char *s2
│      ╎│   0x0000154f      8d851cf8ffff   lea eax, dword [buffer]
│      ╎│   0x00001555      50             push eax                    ; const char *s1
│      ╎│   0x00001556      e8d5fbffff     call sym.imp.strncmp        ; int strncmp(const char *s1, const char *s2, size_t n)
│      ╎│   0x0000155b      83c410         add esp, 0x10
│      ╎│   0x0000155e      85c0           test eax, eax
│     ┌───< 0x00001560      7575           jne 0x15d7
│     │╎│   0x00001562      83ec0c         sub esp, 0xc
│     │╎│   0x00001565      8d83c4e1ffff   lea eax, dword [ebx - 0x1e3c]
│     │╎│   0x0000156b      50             push eax                    ; const char *s
│     │╎│   0x0000156c      e82ffbffff     call sym.imp.puts           ; int puts(const char *s)
│     │╎│   0x00001571      83c410         add esp, 0x10
│     │╎│   0x00001574      83ec0c         sub esp, 0xc
│     │╎│   0x00001577      6a38           push 0x38                   ; '8' ; U"444\u0160\u0160\x04\x04\x03\u0194\u0194\u0194\x13\x13\x04\x01\x01" ; size_t size
│     │╎│   0x00001579      e812fbffff     call sym.imp.malloc         ;  void *malloc(size_t size)
│     │╎│   0x0000157e      83c410         add esp, 0x10
│     │╎│   0x00001581      8945ec         mov dword [dest], eax
│     │╎│   0x00001584      83ec04         sub esp, 4
│     │╎│   0x00001587      6a38           push 0x38                   ; '8' ; U"444\u0160\u0160\x04\x04\x03\u0194\u0194\u0194\x13\x13\x04\x01\x01" ; size_t  n
│     │╎│   0x00001589      8d851cf8ffff   lea eax, dword [buffer]
│     │╎│   0x0000158f      50             push eax                    ; const char *src
│     │╎│   0x00001590      ff75ec         push dword [dest]           ; char *dest
│     │╎│   0x00001593      e858fbffff     call sym.imp.strncpy        ; char *strncpy(char *dest, const char *src, size_t  n)
│     │╎│   0x00001598      83c410         add esp, 0x10
│     │╎│   0x0000159b      83ec08         sub esp, 8
│     │╎│   0x0000159e      ff75ec         push dword [dest]
│     │╎│   0x000015a1      8d83fce1ffff   lea eax, dword [ebx - 0x1e04]
│     │╎│   0x000015a7      50             push eax                    ; const char *format
│     │╎│   0x000015a8      e883faffff     call sym.imp.printf         ; int printf(const char *format)
│     │╎│   0x000015ad      83c410         add esp, 0x10
│     │╎│   0x000015b0      83ec04         sub esp, 4
│     │╎│   0x000015b3      68d0070000     push 0x7d0                  ; 2000 ; size_t n
│     │╎│   0x000015b8      6a00           push 0                      ; int c
│     │╎│   0x000015ba      8d851cf8ffff   lea eax, dword [buffer]
│     │╎│   0x000015c0      50             push eax                    ; void *s
│     │╎│   0x000015c1      e81afbffff     call sym.imp.memset         ; void *memset(void *s, int c, size_t n)
│     │╎│   0x000015c6      83c410         add esp, 0x10
│     │╎│   0x000015c9      83ec0c         sub esp, 0xc
│     │╎│   0x000015cc      ff75ec         push dword [dest]
│     │╎│   0x000015cf      e873feffff     call sym.chat
│     │╎│   0x000015d4      83c410         add esp, 0x10
│     │╎│   ; CODE XREF from sym.connection_handler @ 0x1560
│     └───> 0x000015d7      83ec04         sub esp, 4
│      ╎│   0x000015da      68d0070000     push 0x7d0                  ; 2000 ; size_t n
│      ╎│   0x000015df      6a00           push 0                      ; int c
│      ╎│   0x000015e1      8d851cf8ffff   lea eax, dword [buffer]
│      ╎│   0x000015e7      50             push eax                    ; void *s
│      ╎│   0x000015e8      e8f3faffff     call sym.imp.memset         ; void *memset(void *s, int c, size_t n)
│      ╎│   0x000015ed      83c410         add esp, 0x10
│      ╎│   ; CODE XREF from sym.connection_handler @ 0x14e2
│      ╎└─> 0x000015f0      6a00           push 0                      ; int flags
│      ╎    0x000015f2      68d0070000     push 0x7d0                  ; 2000 ; size_t length
│      ╎    0x000015f7      8d851cf8ffff   lea eax, dword [buffer]
│      ╎    0x000015fd      50             push eax                    ; void *buffer
│      ╎    0x000015fe      ff75f4         push dword [fildes]         ; int socket
│      ╎    0x00001601      e83afbffff     call sym.imp.recv           ; ssize_t recv(int socket, void *buffer, size_t length, int flags)
│      ╎    0x00001606      83c410         add esp, 0x10
│      ╎    0x00001609      8945f0         mov dword [length], eax
│      ╎    0x0000160c      837df000       cmp dword [length], 0
│      └──< 0x00001610      0f8fd1feffff   jg 0x14e7
│           0x00001616      83ec0c         sub esp, 0xc
│           0x00001619      ff75f4         push dword [fildes]         ; int fildes
│           0x0000161c      e82ffbffff     call sym.imp.close          ; int close(int fildes)
│           0x00001621      83c410         add esp, 0x10
│           0x00001624      837df000       cmp dword [length], 0
│       ┌─< 0x00001628      7517           jne 0x1641
│       │   0x0000162a      83ec08         sub esp, 8
│       │   0x0000162d      ff75f4         push dword [fildes]
│       │   0x00001630      8d830fe2ffff   lea eax, dword [ebx - 0x1df1]
│       │   0x00001636      50             push eax                    ; const char *format
│       │   0x00001637      e8f4f9ffff     call sym.imp.printf         ; int printf(const char *format)
│       │   0x0000163c      83c410         add esp, 0x10
│      ┌──< 0x0000163f      eb12           jmp 0x1653
│      ││   ; CODE XREF from sym.connection_handler @ 0x1628
│      │└─> 0x00001641      83ec0c         sub esp, 0xc
│      │    0x00001644      8d832be2ffff   lea eax, dword [ebx - 0x1dd5]
│      │    0x0000164a      50             push eax                    ; const char *s
│      │    0x0000164b      e810faffff     call sym.imp.perror         ; void perror(const char *s)
│      │    0x00001650      83c410         add esp, 0x10
│      │    ; CODE XREF from sym.connection_handler @ 0x163f
│      └──> 0x00001653      b800000000     mov eax, 0
│           0x00001658      8b5dfc         mov ebx, dword [var_4h]
│           0x0000165b      c9             leave
└           0x0000165c      c3             ret
